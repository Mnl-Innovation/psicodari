---
import "../styles/global.css";
interface Props {
	title?: string | undefined;
	description?: string | undefined;
	keywords?: string | undefined;
}

const {
	title = "Psicodari - La atención y el apoyo que necesitas para alcanzar tus objetivos",
	description = "Estamos comprometidos a ayudarte a comprender mejor tus emociones",
	keywords = "psicologia, terapia, apoyo emocional, bienestar mental, salud mental, psicoterapia, psicologo, psicologa, psicoterapia online, terapia online, terapia presencial, consulta psicologica, ayuda emocional, crecimiento personal, desarrollo personal, autoayuda",
} = Astro.props;
---

<meta charset="UTF-8" />
<meta name="description" property="og:description" content={description} />
<meta name="viewport" content="width=device-width" />
<meta name="generator" content={Astro.generator} />
<meta name="keywords" content={keywords} />
<!-- Instagrams tags -->
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://psicodari.com/" />
<meta
	property="og:image"
	content="https://psicodari.com/assets/inteligencia-emocional.webp"
/>
<meta
	property="og:image:alt"
	content="Psicodari - La atención y el apoyo que necesitas para alcanzar tus objetivos"
/>
<meta property="og:image:width" content="1200" />
<meta property="og:image:height" content="630" />
<meta property="og:locale" content="es_ES" />
<meta property="og:site_name" content="Psicodari" />
<title>{title}</title>
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />

<!-- Google tag (gtag.js) -->
<script is:inline src="https://www.googletagmanager.com/gtag/js?id=G-0LY9HVJC17"
></script>
<script is:inline>
	window.dataLayer = window.dataLayer || [];
	function gtag() {
		dataLayer.push(arguments);
	}
	gtag("js", new Date());

	gtag("config", "G-0LY9HVJC17");
</script>

<script is:inline>
	// This code is inlined in the head to make dark mode instant & blocking.
	const getThemePreference = () => {
		if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
			return localStorage.getItem("theme");
		}
		return "light";
	};
	const isDark = getThemePreference() === "dark";
	document.documentElement.classList[isDark ? "add" : "remove"]("dark");

	if (typeof localStorage !== "undefined") {
		// Watch the document element and persist user preference when it changes.
		const observer = new MutationObserver(() => {
			const isDark = document.documentElement.classList.contains("dark");
			localStorage.setItem("theme", isDark ? "dark" : "light");
		});
		observer.observe(document.documentElement, {
			attributes: true,
			attributeFilter: ["class"],
		});
	}
</script>
